=== TRACE SLR(1) ===
STACK [0] | INPUT ['NUMBER', 'SEMICOLON', '$', '$'] | ACTION None
❌ Cadena no aceptada: NUMBER inesperado.
❌ Error: Token inesperado: NUMBER
=== TRACE SLR(1) ===
STACK [0] | INPUT ['NUMBER', 'TIMES', 'NUMBER', 'PLUS', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION None
❌ Cadena no aceptada: NUMBER inesperado.
❌ Error: Token inesperado: NUMBER
=== TRACE SLR(1) ===
STACK [0] | INPUT ['NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 4)
STACK [0, 4] | INPUT ['SEMICOLON', '$', '$'] | ACTION ('reduce', 'term', ('NUMBER',))
   ↳ reduce term -> NUMBER (goto 3)
STACK [0, 3] | INPUT ['SEMICOLON', '$', '$'] | ACTION ('reduce', 'expression', ('term',))
   ↳ reduce expression -> term (goto 2)
STACK [0, 2] | INPUT ['SEMICOLON', '$', '$'] | ACTION ('shift', 6)
STACK [0, 2, 6] | INPUT ['$', '$'] | ACTION ('accept',)
✅ Cadena aceptada.
=== TRACE SLR(1) ===
STACK [0] | INPUT ['NUMBER', 'TIMES', 'NUMBER', 'PLUS', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 4)
STACK [0, 4] | INPUT ['TIMES', 'NUMBER', 'PLUS', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 8)
STACK [0, 4, 8] | INPUT ['NUMBER', 'PLUS', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 4)
STACK [0, 4, 8, 4] | INPUT ['PLUS', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'term', ('NUMBER',))
   ↳ reduce term -> NUMBER (goto 11)
STACK [0, 4, 8, 11] | INPUT ['PLUS', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'term', ('NUMBER', 'TIMES', 'term'))
   ↳ reduce term -> NUMBER TIMES term (goto 3)
STACK [0, 3] | INPUT ['PLUS', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 7)
STACK [0, 3, 7] | INPUT ['NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 4)
STACK [0, 3, 7, 4] | INPUT ['SEMICOLON', '$', '$'] | ACTION ('reduce', 'term', ('NUMBER',))
   ↳ reduce term -> NUMBER (goto 3)
STACK [0, 3, 7, 3] | INPUT ['SEMICOLON', '$', '$'] | ACTION ('reduce', 'expression', ('term',))
   ↳ reduce expression -> term (goto 10)
STACK [0, 3, 7, 10] | INPUT ['SEMICOLON', '$', '$'] | ACTION ('reduce', 'expression', ('term', 'PLUS', 'expression'))
   ↳ reduce expression -> term PLUS expression (goto 2)
STACK [0, 2] | INPUT ['SEMICOLON', '$', '$'] | ACTION ('shift', 6)
STACK [0, 2, 6] | INPUT ['$', '$'] | ACTION ('accept',)
✅ Cadena aceptada.
