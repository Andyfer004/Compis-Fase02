=== TRACE SLR(1) ===
STACK [0] | INPUT ['ID', 'MINUS', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 5)
STACK [0, 5] | INPUT ['MINUS', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'factor', ('ID',))
   ↳ reduce factor -> ID (goto 3)
STACK [0, 3] | INPUT ['MINUS', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'term', ('factor',))
   ↳ reduce term -> factor (goto 4)
STACK [0, 4] | INPUT ['MINUS', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'expression', ('term',))
   ↳ reduce expression -> term (goto 2)
STACK [0, 2] | INPUT ['MINUS', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 8)
STACK [0, 2, 8] | INPUT ['NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 1)
STACK [0, 2, 8, 1] | INPUT ['SEMICOLON', '$', '$'] | ACTION ('reduce', 'factor', ('NUMBER',))
   ↳ reduce factor -> NUMBER (goto 3)
STACK [0, 2, 8, 3] | INPUT ['SEMICOLON', '$', '$'] | ACTION ('reduce', 'term', ('factor',))
   ↳ reduce term -> factor (goto 14)
STACK [0, 2, 8, 14] | INPUT ['SEMICOLON', '$', '$'] | ACTION ('reduce', 'expression', ('expression', 'MINUS', 'term'))
   ↳ reduce expression -> expression MINUS term (goto 2)
STACK [0, 2] | INPUT ['SEMICOLON', '$', '$'] | ACTION ('shift', 9)
STACK [0, 2, 9] | INPUT ['$', '$'] | ACTION ('accept',)
✅ Cadena aceptada.
=== TRACE SLR(1) ===
STACK [0] | INPUT ['ID', 'PLUS', 'NUMBER', 'TIMES', 'LPAREN', 'ID', 'MINUS', 'NUMBER', 'RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 5)
STACK [0, 5] | INPUT ['PLUS', 'NUMBER', 'TIMES', 'LPAREN', 'ID', 'MINUS', 'NUMBER', 'RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'factor', ('ID',))
   ↳ reduce factor -> ID (goto 3)
STACK [0, 3] | INPUT ['PLUS', 'NUMBER', 'TIMES', 'LPAREN', 'ID', 'MINUS', 'NUMBER', 'RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'term', ('factor',))
   ↳ reduce term -> factor (goto 4)
STACK [0, 4] | INPUT ['PLUS', 'NUMBER', 'TIMES', 'LPAREN', 'ID', 'MINUS', 'NUMBER', 'RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'expression', ('term',))
   ↳ reduce expression -> term (goto 2)
STACK [0, 2] | INPUT ['PLUS', 'NUMBER', 'TIMES', 'LPAREN', 'ID', 'MINUS', 'NUMBER', 'RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 7)
STACK [0, 2, 7] | INPUT ['NUMBER', 'TIMES', 'LPAREN', 'ID', 'MINUS', 'NUMBER', 'RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 1)
STACK [0, 2, 7, 1] | INPUT ['TIMES', 'LPAREN', 'ID', 'MINUS', 'NUMBER', 'RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'factor', ('NUMBER',))
   ↳ reduce factor -> NUMBER (goto 3)
STACK [0, 2, 7, 3] | INPUT ['TIMES', 'LPAREN', 'ID', 'MINUS', 'NUMBER', 'RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'term', ('factor',))
   ↳ reduce term -> factor (goto 13)
STACK [0, 2, 7, 13] | INPUT ['TIMES', 'LPAREN', 'ID', 'MINUS', 'NUMBER', 'RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 11)
STACK [0, 2, 7, 13, 11] | INPUT ['LPAREN', 'ID', 'MINUS', 'NUMBER', 'RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 6)
STACK [0, 2, 7, 13, 11, 6] | INPUT ['ID', 'MINUS', 'NUMBER', 'RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 5)
STACK [0, 2, 7, 13, 11, 6, 5] | INPUT ['MINUS', 'NUMBER', 'RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'factor', ('ID',))
   ↳ reduce factor -> ID (goto 3)
STACK [0, 2, 7, 13, 11, 6, 3] | INPUT ['MINUS', 'NUMBER', 'RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'term', ('factor',))
   ↳ reduce term -> factor (goto 4)
STACK [0, 2, 7, 13, 11, 6, 4] | INPUT ['MINUS', 'NUMBER', 'RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'expression', ('term',))
   ↳ reduce expression -> term (goto 12)
STACK [0, 2, 7, 13, 11, 6, 12] | INPUT ['MINUS', 'NUMBER', 'RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 8)
STACK [0, 2, 7, 13, 11, 6, 12, 8] | INPUT ['NUMBER', 'RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 1)
STACK [0, 2, 7, 13, 11, 6, 12, 8, 1] | INPUT ['RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'factor', ('NUMBER',))
   ↳ reduce factor -> NUMBER (goto 3)
STACK [0, 2, 7, 13, 11, 6, 12, 8, 3] | INPUT ['RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'term', ('factor',))
   ↳ reduce term -> factor (goto 14)
STACK [0, 2, 7, 13, 11, 6, 12, 8, 14] | INPUT ['RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'expression', ('expression', 'MINUS', 'term'))
   ↳ reduce expression -> expression MINUS term (goto 12)
STACK [0, 2, 7, 13, 11, 6, 12] | INPUT ['RPAREN', 'DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 17)
STACK [0, 2, 7, 13, 11, 6, 12, 17] | INPUT ['DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'factor', ('LPAREN', 'expression', 'RPAREN'))
   ↳ reduce factor -> LPAREN expression RPAREN (goto 16)
STACK [0, 2, 7, 13, 11, 16] | INPUT ['DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('reduce', 'term', ('term', 'TIMES', 'factor'))
   ↳ reduce term -> term TIMES factor (goto 13)
STACK [0, 2, 7, 13] | INPUT ['DIV', 'NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 10)
STACK [0, 2, 7, 13, 10] | INPUT ['NUMBER', 'SEMICOLON', '$', '$'] | ACTION ('shift', 1)
STACK [0, 2, 7, 13, 10, 1] | INPUT ['SEMICOLON', '$', '$'] | ACTION ('reduce', 'factor', ('NUMBER',))
   ↳ reduce factor -> NUMBER (goto 15)
STACK [0, 2, 7, 13, 10, 15] | INPUT ['SEMICOLON', '$', '$'] | ACTION ('reduce', 'term', ('term', 'DIV', 'factor'))
   ↳ reduce term -> term DIV factor (goto 13)
STACK [0, 2, 7, 13] | INPUT ['SEMICOLON', '$', '$'] | ACTION ('reduce', 'expression', ('expression', 'PLUS', 'term'))
   ↳ reduce expression -> expression PLUS term (goto 2)
STACK [0, 2] | INPUT ['SEMICOLON', '$', '$'] | ACTION ('shift', 9)
STACK [0, 2, 9] | INPUT ['$', '$'] | ACTION ('accept',)
✅ Cadena aceptada.
